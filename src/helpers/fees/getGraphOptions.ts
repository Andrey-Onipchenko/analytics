import { ChartData } from "@/helpers/fees/types";

const chains: any = {
  1: "Ethereum",
  10: "Optimism",
  250: "Fantom",
  42161: "Arbitrum",
  43114: "Avalanche",
};

const createPieGraphData = (values: any) => {
  const borrowFees: ChartData = { name: "Borrow Fees", value: 0 };
  const liquidationFees: ChartData = { name: "Liquidation Fees", value: 0 };
  const interestFees: ChartData = { name: "Interest Fees", value: 0 };
  values.forEach((value: any) => {
    borrowFees.value += value.borrowFeesGenerated;
    liquidationFees.value += value.liquidationFeesGenerated;
    interestFees.value += value.interestFeesGenerated;
  });

  const total = borrowFees.value + interestFees.value + liquidationFees.value;

  return { total, byCategory: [borrowFees, interestFees, liquidationFees] };
};

export const getTotalByCategoryOption = (
  values: number[],
  interval: number
) => {
  const data = createPieGraphData(values.reverse().splice(0, interval));

  return {
    title: {
      text: `Total By Category: $${data.total}`,
    },

    tooltip: {
      trigger: "item",
    },

    legend: {
      show: false,
    },

    series: [
      {
        name: "Fees by category",
        type: "pie",
        radius: ["40%", "60%"],
        avoidLabelOverlap: false,
        label: {
          show: false,
          position: "left",
        },
        labelLine: {
          show: true,
        },
        data: data.byCategory,
      },
    ],
  };
};

const createBarsItemData = (values: number[]) => {
  const borrowFees: string[] = [];
  const liquidationFees: string[] = [];
  const interestFees: string[] = [];
  values.forEach((value: any) => {
    borrowFees.push(value.borrowFeesGenerated);
    liquidationFees.push(value.liquidationFeesGenerated);
    interestFees.push(value.interestFeesGenerated);
  });

  return { borrowFees, liquidationFees, interestFees };
};

export const getByCategoryOption = (
  labels: string[],
  values: number[],
  interval: number
) => {
  const barsItemData = createBarsItemData(values.reverse().splice(0, interval));

  return {
    title: {
      text: "Fees generated by category",
    },

    tooltip: {
      trigger: "axis",
      axisPointer: {
        type: "none",
      },
    },

    legend: { data: ["Borrow Fees", "Liquidation Fees", "Interest Fees"] },

    xAxis: {
      data: labels.reverse().splice(0, interval),
    },

    yAxis: {},

    series: [
      {
        name: "Borrow Fees",
        emphasis: {
          focus: "series",
        },
        data: barsItemData.borrowFees,
        type: "bar",
        stack: "x",
      },

      {
        name: "Interest Fees",
        emphasis: {
          focus: "series",
        },
        data: barsItemData.interestFees,
        type: "bar",
        stack: "x",
      },

      {
        name: "Liquidation Fees",
        emphasis: {
          focus: "series",
        },
        data: barsItemData.liquidationFees,
        type: "bar",
        stack: "x",
      },
    ],
  };
};

export const getByChainOption = (data: any, interval: number) => {
  return {
    title: {
      text: "Fees generated by chain",
    },

    tooltip: {
      trigger: "axis",
      axisPointer: {
        type: "none",
      },
    },

    legend: {
      data: ["Ethereum", "Optimism", "Fantom", "Arbitrum", "Avalanche"],
    },

    xAxis: {
      data: data[0].labels.reverse().splice(0, interval),
    },

    yAxis: {},

    series: data.map((chain: any) => {
      return {
        name: chains[chain.chainId],
        emphasis: {
          focus: "series",
        },
        data: chain.values.reverse().splice(0, interval),
        type: "bar",
        stack: "x",
      };
    }),
  };
};
